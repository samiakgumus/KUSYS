<style>
    td.details-control {
    background: url('/img/details_open.png') no-repeat center center;
    cursor: pointer;
}
tr.details td.details-control {
    background: url('/img/details_close.png') no-repeat center center;
}
</style>	
<link href="~/css/datatables.bundle.css" rel="stylesheet" type="text/css" />
<div class="card">
 <div class="card-body py-4">

     <!--begin::Wrapper-->
<div class="d-flex flex-stack mb-5">
    <!--begin::Search-->
    <div class="d-flex align-items-center position-relative my-1">
        <span class="svg-icon svg-icon-2"></span>
        <input type="text" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" placeholder="Search Students"/>
    </div>
    <!--end::Search-->

    <!--begin::Toolbar-->
    <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
        

        <!--begin::Add student-->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal_student_add_edit" onclick="GetAddStudentModal()">
            <span class="svg-icon svg-icon-2"></span>
            Add Student
        </button>
        <!--end::Add student-->
    </div>
    <!--end::Toolbar-->

    <!--begin::Group actions-->
    <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
        <div class="fw-bolder me-5">
            <span class="me-2" data-kt-docs-table-select="selected_count"></span> Selected
        </div>

        <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="Coming Soon">
            Selection Action
        </button>
    </div>
    <!--end::Group actions-->
</div>
<!--end::Wrapper-->

<!--begin::Datatable-->
<table id="students_datatable" class="table align-middle table-row-dashed fs-6 gy-5">
    <thead>
    <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">
        <th></th>
        
        <th>First Name</th>
        <th>Last Name</th>
        <th>Student No</th>
        <th>Birth Date</th>
        <th>Status</th>
        <th class="text-end min-w-100px">Actions</th>
    </tr>
    </thead>
    <tbody class="text-gray-600 fw-bold">
    </tbody>
</table>
<!--end::Datatable-->
 </div>
</div>

@section Scripts{
    	<script src="~/js/datatables.bundle.js"></script>
 <script>
        "use strict";

// Class definition
var KTDatatablesServerSide = function () {
    // Shared variables
    var table;
    var dt;
    var filterPayment;

    // Private functions
    var initDatatable = function () {
        dt = $("#students_datatable").DataTable({
            searchDelay: 500,
            processing: true,
            serverSide: true,
            order: [[5, 'desc']],
            stateSave: true,
            select: {
                style: 'os',
                selector: 'td:first-child',
                className: 'row-selected'
            },
            

             "ajax": {
            "url": "/Student/GetStudents",
            "type": "POST",
            "datatype": "json"
             },
            columns: [
                 {
                class: 'details-control',
                orderable: false,
                data: null,
                defaultContent: '',
                "width": "10%"
            },
                
                { data: 'firstName' },
                { data: 'lastName' },
                { data: 'studentNo' },
                { data: 'birthDate' },
                { data: 'status' },
                { data: null },
            ],
            columnDefs: [
               

                 {
                    targets: 4,
                    type: 'date',
                    render: function (data) {
                        var formattedDate = new Date(data);

                                    // callback function support for column rendering

                                    return moment(formattedDate).format('DD.MM.YYYY'); // day
                    }
                },
                   {
                    targets: 5,
                   
                    render: function (data) {
                        if (data == true) {
                            return `<div class="badge badge-light-success fw-bolder">Active</div>`
                        } else {
                             return `<div class="badge badge-light-danger fw-bolder">Passive</div>`
                        }
                    }
                }, 
                {
                    targets: -1,
                    data: null,
                    orderable: false,
                    className: 'text-end',
                    render: function (data, type, row) {
                        return `
                            <a href="#" class="btn btn-light btn-active-light-primary btn-sm" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">
                                Actions
                                <span class="svg-icon svg-icon-5 m-0">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <polygon points="0 0 24 0 24 24 0 24"></polygon>
                                            <path d="M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z" fill="#000000" fill-rule="nonzero" transform="translate(12.000003, 11.999999) rotate(-180.000000) translate(-12.000003, -11.999999)"></path>
                                        </g>
                                    </svg>
                                </span>
                            </a>
                            <!--begin::Menu-->
                            <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4" data-kt-menu="true">
                             
                             <!--begin::Menu item-->
                                <div class="menu-item px-3">
                                    <a onclick="GetStudentDetailsModal(` + data.id + `)" data-bs-toggle="modal" data-bs-target="#modal_student_details" class="menu-link px-3" data-kt-docs-table-filter="edit_row">
                                        Details
                                    </a>
                                </div>
                                <!--end::Menu item-->
                            <!--begin::Menu item-->
                                <div class="menu-item px-3">
                                    <a onclick="GetEditStudentModal(` + data.id + `)" data-bs-toggle="modal" data-bs-target="#modal_student_add_edit" class="menu-link px-3" data-kt-docs-table-filter="edit_row">
                                        Edit
                                    </a>
                                </div>
                                <!--end::Menu item-->

                                <!--begin::Menu item-->
                                <div class="menu-item px-3">
                                    <a href="#" data-studentId="`+data.id+`" class="menu-link px-3" data-kt-docs-table-filter="delete_row">
                                        Delete
                                    </a>
                                </div>
                                <!--end::Menu item-->
                            </div>
                            <!--end::Menu-->
                        `;
                    },
                },
            ],
           
        });

        table = dt.$;

        // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw
        dt.on('draw', function () {
           detailRows.forEach(function(id, i) {
            $('#' + id + ' td.details-control').trigger('click');
        });
            
            handleDeleteRows();
            KTMenu.createInstances();
        });
    }

    // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()
    var handleSearchDatatable = function () {
        const filterSearch = document.querySelector('[data-kt-docs-table-filter="search"]');
        filterSearch.addEventListener('keyup', function (e) {
            dt.search(e.target.value).draw();
        });
    }

     
   

    // Delete customer
    var handleDeleteRows = () => {
        // Select all delete buttons
        const deleteButtons = document.querySelectorAll('[data-kt-docs-table-filter="delete_row"]');

        deleteButtons.forEach(d => {
            // Delete button on click
            d.addEventListener('click', function (e) {
                e.preventDefault();

                var studentId = d.getAttribute("data-studentId");
               

                // Select parent row
                const parent = e.target.closest('tr');

                // Get student name
                const customerName = parent.querySelectorAll('td')[1].innerText;

                // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/
                Swal.fire({
                    text: "Are you sure you want to delete " + customerName + "?",
                    icon: "warning",
                    showCancelButton: true,
                    buttonsStyling: false,
                    confirmButtonText: "Yes, delete!",
                    cancelButtonText: "No, cancel",
                    customClass: {
                        confirmButton: "btn fw-bold btn-danger",
                        cancelButton: "btn fw-bold btn-active-light-primary"
                    }
                }).then(function (result) {
                    if (result.value) {
                        // Simulate delete request -- for demo purpose only
                        Swal.fire({
                            text: "Deleting " + customerName,
                            icon: "info",
                            buttonsStyling: false,
                            showConfirmButton: false,
                            timer: 2000
                        }).then(function () {
                            $.ajax({
                        url: '/Student/DeleteStudent',

                        type: 'Post',

                        data: {
                            id: studentId,

                        },
                        success: function (data) {
                            if (data.success) {
                                Swal.fire("", data.message, "success");


                                setTimeout(function () {
                                    window.location.href = "/Student";
                                }, 2000);
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            console.log(thrownError + " " + xhr.status);
                        }
                    });

                                dt.draw();
                        });
                    } else if (result.dismiss === 'cancel') {
                        Swal.fire({
                            text: customerName + " was not deleted.",
                            icon: "error",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn fw-bold btn-primary",
                            }
                        });
                    }
                });
            })
        });
    }

 
        var detailRows = [];
 
    $('#students_datatable tbody').on('click', 'tr td.details-control', function () {
        var tr = $(this).closest('tr');
        var row = dt.row(tr);
        var idx = detailRows.indexOf(tr.attr('id'));
 
        console.log(row);

        if (row.child.isShown()) {
            tr.removeClass('details');
            row.child.hide();
 
            // Remove from the 'open' array
            detailRows.splice(idx, 1);
        } else {
            tr.addClass('details');
            //row.child( "sadsa").show();

             $.ajax({
                url: '/Student/GetStudentDatatableDetails',
                data: { id:row.data().id },
                type: 'POST',
                success: function (data) {

                   row.child(data).show();

                },
                error: function (jxhr, msg, err) {
                    if (jxhr.status == 401) {
                        window.location.href = "/Account?ReturnUrl=Student";
                    }

                }
            });
 
            // Add to the 'open' array
            if (idx === -1) {
                detailRows.push(tr.attr('id'));
            }
        }
    });
    
        
    
    // Public methods
    return {
        init: function () {
            initDatatable();
            handleSearchDatatable();
           
             
            handleDeleteRows();
            
        }
    }
}();

// On document ready
KTUtil.onDOMContentLoaded(function () {
    KTDatatablesServerSide.init();
});



 function GetEditStudentModal(id) {
            $("#modal_student_add_edit_body").html("");
            $.ajax({
                url: '/Student/GetAddEditStudentForm',
                data: { id },
                type: 'POST',
                success: function (data) {

                    $("#modal_student_add_edit_title").html("Edit Student");
                    $("#modal_student_add_edit_body").html(data);

                },
                error: function (jxhr, msg, err) {
                    if (jxhr.status == 401) {
                        window.location.href = "/Account?ReturnUrl=Student";
                    }

                }
            });
        }

         function GetStudentDetailsModal(id) {
            $("#modal_student_details_body").html("");
            $.ajax({
                url: '/Student/ProfilePartial',
                data: { id },
                type: 'POST',
                success: function (data) {

                    $("#modal_student_details_title").html("Profile Details");
                    $("#modal_student_details_body").html(data);

                },
                error: function (jxhr, msg, err) {
                    if (jxhr.status == 401) {
                        window.location.href = "/Account?ReturnUrl=Student";
                    }

                }
            });
        }

        function GetAddStudentModal() {
            $("#modal_student_add_edit_body").html("");
            $.ajax({
                url: '/Student/GetAddEditStudentForm',

                type: 'POST',
                success: function (data) {

                    $("#modal_student_add_edit_title").html("Add Student");
                    $("#modal_student_add_edit_body").html(data);

                },
                error: function (jxhr, msg, err) {
                    if (jxhr.status == 401) {
                        window.location.href = "/Account?ReturnUrl=Student";
                    }

                }
            });
        }



</script>
}